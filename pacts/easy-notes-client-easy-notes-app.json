{
  "consumer": {
    "name": "easy-notes-client"
  },
  "provider": {
    "name": "easy-notes-app"
  },
  "interactions": [
    {
      "description": "a delete request to delete a specific note with note id",
      "providerState": "two notes",
      "request": {
        "method": "DELETE",
        "path": "/notes/1b71b7eeecbd28bac0b3f1ea",
        "headers": {
          "Accept": "application/json"
        }
      },
      "response": {
        "status": 200,
        "headers": {
          "Content-Type": "application/json; charset=utf-8"
        },
        "body": {
          "message": "Note deleted successfully.",
          "note": {
            "_id": "1b71b7eeecbd28bac0b3f1ea",
            "title": "First Note",
            "content": "Doe, a deer, a female deer",
            "createdAt": "2015-08-06T16:53:10.123+01:00",
            "updatedAt": "2015-08-06T16:53:10.123+01:00",
            "__v": 13
          }
        },
        "matchingRules": {
          "$.body.note._id": {
            "match": "regex",
            "regex": "^[0-9a-fA-F]+$"
          },
          "$.body.note.title": {
            "match": "type"
          },
          "$.body.note.content": {
            "match": "type"
          },
          "$.body.note.createdAt": {
            "match": "regex",
            "regex": "^\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d:[0-5]\\d\\.\\d{3}([+-][0-2]\\d:[0-5]\\d|Z)$"
          },
          "$.body.note.updatedAt": {
            "match": "regex",
            "regex": "^\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d:[0-5]\\d\\.\\d{3}([+-][0-2]\\d:[0-5]\\d|Z)$"
          },
          "$.body.note.__v": {
            "match": "type"
          }
        }
      }
    },
    {
      "description": "a delete request to delete a specific note with note id",
      "providerState": "second note",
      "request": {
        "method": "DELETE",
        "path": "/notes/1b71b7eeecbd28bac0b3f1ea",
        "headers": {
          "Accept": "application/json"
        }
      },
      "response": {
        "status": 404,
        "headers": {
          "Content-Type": "application/json; charset=utf-8"
        },
        "body": {
          "message": "Note not found with id 1b71b7eeecbd28bac0b3f1ea"
        }
      }
    },
    {
      "description": "an update request for a specific note with note id",
      "providerState": "no notes",
      "request": {
        "method": "PUT",
        "path": "/notes/28bac0b3f1ea1b71b7eeecdb",
        "headers": {
          "Accept": "application/json",
          "Content-Type": "application/json"
        },
        "body": {
          "title": "Fifth Note",
          "content": "Sow, a needle pulling thread"
        }
      },
      "response": {
        "status": 404,
        "headers": {
          "Content-Type": "application/json; charset=utf-8"
        },
        "body": {
          "message": "Note not found with id 28bac0b3f1ea1b71b7eeecdb"
        }
      }
    },
    {
      "description": "an update request for a specific note with note id",
      "providerState": "first note",
      "request": {
        "method": "PUT",
        "path": "/notes/1b71b7eeecbd28bac0b3f1ea",
        "headers": {
          "Accept": "application/json",
          "Content-Type": "application/json"
        },
        "body": {
          "title": "Fifth Note",
          "content": "Sow, a needle pulling thread"
        }
      },
      "response": {
        "status": 200,
        "headers": {
          "Content-Type": "application/json; charset=utf-8"
        },
        "body": {
          "_id": "1b71b7eeecbd28bac0b3f1ea",
          "title": "Fifth Note",
          "content": "Sow, a needle pulling thread",
          "createdAt": "2015-08-06T16:53:10.123+01:00",
          "updatedAt": "2015-08-06T16:53:10.123+01:00",
          "__v": 13
        },
        "matchingRules": {
          "$.body._id": {
            "match": "regex",
            "regex": "^[0-9a-fA-F]+$"
          },
          "$.body.title": {
            "match": "type"
          },
          "$.body.content": {
            "match": "type"
          },
          "$.body.createdAt": {
            "match": "regex",
            "regex": "^\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d:[0-5]\\d\\.\\d{3}([+-][0-2]\\d:[0-5]\\d|Z)$"
          },
          "$.body.updatedAt": {
            "match": "regex",
            "regex": "^\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d:[0-5]\\d\\.\\d{3}([+-][0-2]\\d:[0-5]\\d|Z)$"
          },
          "$.body.__v": {
            "match": "type"
          }
        }
      }
    },
    {
      "description": "an update request for a specific note with note id",
      "providerState": "second note",
      "request": {
        "method": "PUT",
        "path": "/notes/1b71b7eeecbd28bac0b3f1ea",
        "headers": {
          "Accept": "application/json",
          "Content-Type": "application/json"
        },
        "body": {
          "title": "Fifth Note",
          "content": "Sow, a needle pulling thread"
        }
      },
      "response": {
        "status": 404,
        "headers": {
          "Content-Type": "application/json; charset=utf-8"
        },
        "body": {
          "message": "Note not found with id 1b71b7eeecbd28bac0b3f1ea"
        }
      }
    },
    {
      "description": "an update request for a specific note with note id",
      "providerState": "two notes",
      "request": {
        "method": "PUT",
        "path": "/notes/28bac0b3f1ea1b71b7eeecdb",
        "headers": {
          "Accept": "application/json",
          "Content-Type": "application/json"
        },
        "body": {
          "title": "Fifth Note",
          "content": "Sow, a needle pulling thread"
        }
      },
      "response": {
        "status": 200,
        "headers": {
          "Content-Type": "application/json; charset=utf-8"
        },
        "body": {
          "_id": "28bac0b3f1ea1b71b7eeecdb",
          "title": "Fifth Note",
          "content": "Sow, a needle pulling thread",
          "createdAt": "2015-08-06T16:53:10.123+01:00",
          "updatedAt": "2015-08-06T16:53:10.123+01:00",
          "__v": 13
        },
        "matchingRules": {
          "$.body._id": {
            "match": "regex",
            "regex": "^[0-9a-fA-F]+$"
          },
          "$.body.title": {
            "match": "type"
          },
          "$.body.content": {
            "match": "type"
          },
          "$.body.createdAt": {
            "match": "regex",
            "regex": "^\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d:[0-5]\\d\\.\\d{3}([+-][0-2]\\d:[0-5]\\d|Z)$"
          },
          "$.body.updatedAt": {
            "match": "regex",
            "regex": "^\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d:[0-5]\\d\\.\\d{3}([+-][0-2]\\d:[0-5]\\d|Z)$"
          },
          "$.body.__v": {
            "match": "type"
          }
        }
      }
    },
    {
      "description": "a delete request to delete all notes",
      "providerState": "no notes",
      "request": {
        "method": "DELETE",
        "path": "/notes",
        "headers": {
          "Accept": "application/json"
        }
      },
      "response": {
        "status": 200,
        "headers": {
          "Content-Type": "application/json; charset=utf-8"
        },
        "body": {
          "message": "All notes deleted successfully."
        }
      }
    },
    {
      "description": "a delete request to delete all notes",
      "providerState": "first note",
      "request": {
        "method": "DELETE",
        "path": "/notes",
        "headers": {
          "Accept": "application/json"
        }
      },
      "response": {
        "status": 200,
        "headers": {
          "Content-Type": "application/json; charset=utf-8"
        },
        "body": {
          "message": "All notes deleted successfully."
        }
      }
    },
    {
      "description": "a delete request to delete all notes",
      "providerState": "two notes",
      "request": {
        "method": "DELETE",
        "path": "/notes",
        "headers": {
          "Accept": "application/json"
        }
      },
      "response": {
        "status": 200,
        "headers": {
          "Content-Type": "application/json; charset=utf-8"
        },
        "body": {
          "message": "All notes deleted successfully."
        }
      }
    },
    {
      "description": "a get request for a specific note with note id",
      "providerState": "no notes",
      "request": {
        "method": "GET",
        "path": "/notes/28bac0b3f1ea1b71b7eeecdb",
        "headers": {
          "Accept": "application/json"
        }
      },
      "response": {
        "status": 404,
        "headers": {
          "Content-Type": "application/json; charset=utf-8"
        },
        "body": {
          "message": "Note not found with id 28bac0b3f1ea1b71b7eeecdb"
        }
      }
    },
    {
      "description": "a get request for a specific note with note id",
      "providerState": "first note",
      "request": {
        "method": "GET",
        "path": "/notes/1b71b7eeecbd28bac0b3f1ea",
        "headers": {
          "Accept": "application/json"
        }
      },
      "response": {
        "status": 200,
        "headers": {
          "Content-Type": "application/json; charset=utf-8"
        },
        "body": {
          "_id": "1b71b7eeecbd28bac0b3f1ea",
          "title": "First Note",
          "content": "Doe, a deer, a female deer",
          "createdAt": "2015-08-06T16:53:10.123+01:00",
          "updatedAt": "2015-08-06T16:53:10.123+01:00",
          "__v": 13
        },
        "matchingRules": {
          "$.body._id": {
            "match": "regex",
            "regex": "^[0-9a-fA-F]+$"
          },
          "$.body.title": {
            "match": "type"
          },
          "$.body.content": {
            "match": "type"
          },
          "$.body.createdAt": {
            "match": "regex",
            "regex": "^\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d:[0-5]\\d\\.\\d{3}([+-][0-2]\\d:[0-5]\\d|Z)$"
          },
          "$.body.updatedAt": {
            "match": "regex",
            "regex": "^\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d:[0-5]\\d\\.\\d{3}([+-][0-2]\\d:[0-5]\\d|Z)$"
          },
          "$.body.__v": {
            "match": "type"
          }
        }
      }
    },
    {
      "description": "a get request for a specific note with note id",
      "providerState": "second note",
      "request": {
        "method": "GET",
        "path": "/notes/1b71b7eeecbd28bac0b3f1ea",
        "headers": {
          "Accept": "application/json"
        }
      },
      "response": {
        "status": 404,
        "headers": {
          "Content-Type": "application/json; charset=utf-8"
        },
        "body": {
          "message": "Note not found with id 1b71b7eeecbd28bac0b3f1ea"
        }
      }
    },
    {
      "description": "a get request for a specific note with note id",
      "providerState": "two notes",
      "request": {
        "method": "GET",
        "path": "/notes/28bac0b3f1ea1b71b7eeecdb",
        "headers": {
          "Accept": "application/json"
        }
      },
      "response": {
        "status": 200,
        "headers": {
          "Content-Type": "application/json; charset=utf-8"
        },
        "body": {
          "_id": "28bac0b3f1ea1b71b7eeecdb",
          "title": "Second Note",
          "content": "Ray, a drop of golden sun",
          "createdAt": "2015-08-06T16:53:10.123+01:00",
          "updatedAt": "2015-08-06T16:53:10.123+01:00",
          "__v": 13
        },
        "matchingRules": {
          "$.body._id": {
            "match": "regex",
            "regex": "^[0-9a-fA-F]+$"
          },
          "$.body.title": {
            "match": "type"
          },
          "$.body.content": {
            "match": "type"
          },
          "$.body.createdAt": {
            "match": "regex",
            "regex": "^\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d:[0-5]\\d\\.\\d{3}([+-][0-2]\\d:[0-5]\\d|Z)$"
          },
          "$.body.updatedAt": {
            "match": "regex",
            "regex": "^\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d:[0-5]\\d\\.\\d{3}([+-][0-2]\\d:[0-5]\\d|Z)$"
          },
          "$.body.__v": {
            "match": "type"
          }
        }
      }
    },
    {
      "description": "a get request without a note id",
      "providerState": "no notes",
      "request": {
        "method": "GET",
        "path": "/notes",
        "headers": {
          "Accept": "application/json"
        }
      },
      "response": {
        "status": 200,
        "headers": {
          "Content-Type": "application/json; charset=utf-8"
        },
        "body": [

        ]
      }
    },
    {
      "description": "a get request without a note id",
      "providerState": "first note",
      "request": {
        "method": "GET",
        "path": "/notes",
        "headers": {
          "Accept": "application/json"
        }
      },
      "response": {
        "status": 200,
        "headers": {
          "Content-Type": "application/json; charset=utf-8"
        },
        "body": [
          {
            "_id": "1b71b7eeecbd28bac0b3f1ea",
            "title": "First Note",
            "content": "Doe, a deer, a female deer",
            "createdAt": "2015-08-06T16:53:10.123+01:00",
            "updatedAt": "2015-08-06T16:53:10.123+01:00",
            "__v": 13
          }
        ],
        "matchingRules": {
          "$.body[0]._id": {
            "match": "regex",
            "regex": "^[0-9a-fA-F]+$"
          },
          "$.body[0].title": {
            "match": "type"
          },
          "$.body[0].content": {
            "match": "type"
          },
          "$.body[0].createdAt": {
            "match": "regex",
            "regex": "^\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d:[0-5]\\d\\.\\d{3}([+-][0-2]\\d:[0-5]\\d|Z)$"
          },
          "$.body[0].updatedAt": {
            "match": "regex",
            "regex": "^\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d:[0-5]\\d\\.\\d{3}([+-][0-2]\\d:[0-5]\\d|Z)$"
          },
          "$.body[0].__v": {
            "match": "type"
          }
        }
      }
    },
    {
      "description": "a get request without a note id",
      "providerState": "two notes",
      "request": {
        "method": "GET",
        "path": "/notes",
        "headers": {
          "Accept": "application/json"
        }
      },
      "response": {
        "status": 200,
        "headers": {
          "Content-Type": "application/json; charset=utf-8"
        },
        "body": [
          {
            "_id": "1b71b7eeecbd28bac0b3f1ea",
            "title": "First Note",
            "content": "Doe, a deer, a female deer",
            "createdAt": "2015-08-06T16:53:10.123+01:00",
            "updatedAt": "2015-08-06T16:53:10.123+01:00",
            "__v": 13
          },
          {
            "_id": "28bac0b3f1ea1b71b7eeecdb",
            "title": "Second Note",
            "content": "Ray, a drop of golden sun",
            "createdAt": "2015-08-06T16:53:10.123+01:00",
            "updatedAt": "2015-08-06T16:53:10.123+01:00",
            "__v": 13
          }
        ],
        "matchingRules": {
          "$.body[0]._id": {
            "match": "regex",
            "regex": "^[0-9a-fA-F]+$"
          },
          "$.body[0].title": {
            "match": "type"
          },
          "$.body[0].content": {
            "match": "type"
          },
          "$.body[0].createdAt": {
            "match": "regex",
            "regex": "^\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d:[0-5]\\d\\.\\d{3}([+-][0-2]\\d:[0-5]\\d|Z)$"
          },
          "$.body[0].updatedAt": {
            "match": "regex",
            "regex": "^\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d:[0-5]\\d\\.\\d{3}([+-][0-2]\\d:[0-5]\\d|Z)$"
          },
          "$.body[0].__v": {
            "match": "type"
          },
          "$.body[1]._id": {
            "match": "regex",
            "regex": "^[0-9a-fA-F]+$"
          },
          "$.body[1].title": {
            "match": "type"
          },
          "$.body[1].content": {
            "match": "type"
          },
          "$.body[1].createdAt": {
            "match": "regex",
            "regex": "^\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d:[0-5]\\d\\.\\d{3}([+-][0-2]\\d:[0-5]\\d|Z)$"
          },
          "$.body[1].updatedAt": {
            "match": "regex",
            "regex": "^\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d:[0-5]\\d\\.\\d{3}([+-][0-2]\\d:[0-5]\\d|Z)$"
          },
          "$.body[1].__v": {
            "match": "type"
          }
        }
      }
    },
    {
      "description": "a post request to create a new note",
      "providerState": "no notes",
      "request": {
        "method": "POST",
        "path": "/notes",
        "headers": {
          "Accept": "application/json",
          "Content-Type": "application/json"
        },
        "body": {
          "title": "First Note",
          "content": "Doe, a deer, a female deer"
        }
      },
      "response": {
        "status": 200,
        "headers": {
          "Content-Type": "application/json; charset=utf-8"
        },
        "body": {
          "_id": "1b71b7eeecbd28bac0b3f1ea",
          "title": "First Note",
          "content": "Doe, a deer, a female deer",
          "createdAt": "2015-08-06T16:53:10.123+01:00",
          "updatedAt": "2015-08-06T16:53:10.123+01:00",
          "__v": 13
        },
        "matchingRules": {
          "$.body._id": {
            "match": "regex",
            "regex": "^[0-9a-fA-F]+$"
          },
          "$.body.title": {
            "match": "type"
          },
          "$.body.content": {
            "match": "type"
          },
          "$.body.createdAt": {
            "match": "regex",
            "regex": "^\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d:[0-5]\\d\\.\\d{3}([+-][0-2]\\d:[0-5]\\d|Z)$"
          },
          "$.body.updatedAt": {
            "match": "regex",
            "regex": "^\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d:[0-5]\\d\\.\\d{3}([+-][0-2]\\d:[0-5]\\d|Z)$"
          },
          "$.body.__v": {
            "match": "type"
          }
        }
      }
    },
    {
      "description": "a post request to create a new note",
      "providerState": "first note",
      "request": {
        "method": "POST",
        "path": "/notes",
        "headers": {
          "Accept": "application/json",
          "Content-Type": "application/json"
        },
        "body": {
          "title": "Second Note",
          "content": "Ray, a drop of golden sun"
        }
      },
      "response": {
        "status": 200,
        "headers": {
          "Content-Type": "application/json; charset=utf-8"
        },
        "body": {
          "_id": "28bac0b3f1ea1b71b7eeecdb",
          "title": "Second Note",
          "content": "Ray, a drop of golden sun",
          "createdAt": "2015-08-06T16:53:10.123+01:00",
          "updatedAt": "2015-08-06T16:53:10.123+01:00",
          "__v": 13
        },
        "matchingRules": {
          "$.body._id": {
            "match": "regex",
            "regex": "^[0-9a-fA-F]+$"
          },
          "$.body.title": {
            "match": "type"
          },
          "$.body.content": {
            "match": "type"
          },
          "$.body.createdAt": {
            "match": "regex",
            "regex": "^\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d:[0-5]\\d\\.\\d{3}([+-][0-2]\\d:[0-5]\\d|Z)$"
          },
          "$.body.updatedAt": {
            "match": "regex",
            "regex": "^\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d:[0-5]\\d\\.\\d{3}([+-][0-2]\\d:[0-5]\\d|Z)$"
          },
          "$.body.__v": {
            "match": "type"
          }
        }
      }
    }
  ],
  "metadata": {
    "pactSpecification": {
      "version": "0.0.0"
    }
  }
}